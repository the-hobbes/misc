# search for a single phrase/word pattern in a set of files
grep -PR '\bfindme\b' path/to/files
grep -PR '\bfindme\b' *

# search for processes bound to a specific port:
sudo lsof -i :5381

# open a document in the default web browser:
xdg-open some.document.here.html

# convert epoch timestamp to human readable one:
date -d @TIMESTAMP

# choose a random element from a list:
python -c 'import sys; import random; print random.choice(sys.argv[1:])' $(expn some_list)

# another way to choose a random element from a list
expn some_list | shuf -n 1

# remove preceeding whitespace from all lines in a file:
sed -i 's/ //g' /tmp/some_file.txt

# remove all characters after a certain word in a string (AFTERHERE in this case)
sed -i "s/ AFTERHERE.*/ /" path/to/some/file

# replace characters in-place
sed -i 's/original/replacement/g' path/to/some/file

# sed command to find and replace calendar/{api,batch,web}/qa with calendar/{api,batch,web}/qa0 in a single file 
# using extended regex.
sed -i -E "s/calendar\/(api|batch|web)\/qa\b/calendar\/\1\/qa0/" some/file/here

# sed commands to find and replace "qa" with "qa0" in all files in the somedir directory
find dir/called/somdedir/ -type f | xargs sed -i -E "s/\"qa\"/\"qa0\"/"

# convert lines in a file from hex to decimal (works on many other formats too)
tail ~/tmp/hex-ids.txt | awk -F, '{printf "%d\n", strtonum("0x"$1)}' > decimal-ids.txt

# combine a bunch of files into one: 
for i in /home/docs/text/*; do cat $i >> bigfile; done

# compare two files
comm -23 /tmp/validated-users.txt /tmp/users-copied.txt > comparison.txt

# remove/readd line numbers in vim
:se nonu
:se nu
# apply a command to the output of each line from another command, in a while loop
while read -r line; do p4 revert "$line"; done < <(p4 status)

# trim off the last 31 characters of $line
$ while read -r line
> do
> p4 revert ${line::-31}
> done < <(p4 status)

# show processes pid along with name and other info. output format:
# PID  PPID  PGID   SID COMMAND
ps  xao pid,ppid,pgid,sid,comm | grep somename

# diagnose network issues w/mtr. note that "c" is optional, and specifies packets sent. more is better to show
# severity of issues.
mtr -rwc 100 target

# cut out values from a file, then output them to another file, then use awk to sum them
cat input.txt | grep lacks | cut -d' ' -f 40 > values && awk '{ sum += $1 } END { print sum }' values

# diff two files and write an html file containing the results of the diff
gvim -d $FILE1 $FILE2 -c "colorscheme zellner" -c TOhtml -c "w! /tmp/html_diff" -c q! -c q! -c q! 2> /dev/null

# print dateMonthYear
date +"%d%h%k"

# print timestamp
date +"%T"

# flatten a log file into a count of issues by subject
# count uniq, reverse numeric sort
grep "\tcom.google.calendar"  ~/Downloads/calendar.log.WARNING | sort | uniq -c | sort -nr

# To find the sum of individual group records
$ awk -F, '{a[$1]+=$2;}END{for(i in a)print i", "a[i];}' filename
Item1, 800
Item2, 1300
Item3, 900

# find out what is setting your $PATH variable
grep --color -H 'PATH=' ~/.bashrc ~/.profile ~/.bash_profile ~/bash.login \
                     ~/.bash_aliases /etc/bash.bashrc /etc/profile \
                     /etc/profile.d/* /etc/environment 2> /dev/null

# loop through items in a list
for i in {1,2,3}; do echo $i; done

# looks for somestring in a file, finds anything that matches 'something' in the output (between quotes), then removes quotes with tr
cat some/file | grep "somestring" | grep -Po "'.*?'" | tr -d "'"

# watch traffic sent to host (8.8.8.8 in this example) w/tcp dump
sudo tcpdump -n host 8.8.8.8
# watch dns traffic (port 53) 
sudo tcpdump -n port 53
# watch web traffic (port 80), shows metadata from headers of the tcp packets
sudo tcpdump -n port 80

# send a web request using netcat (and printf to send the http header)
printf 'HEAD / HTTP/1.1\r\nHost: example.net\r\n\r\n' | nc example.net 80

# kill the last process executed in the background. '$!' expands to its pid
kill $!

# how long does a given command take to run?
$ time longrunningcommand --takeyourtime

# use system time instead:
$ /usr/bin/time longrunningcommand --getsomecoffee

# use dig to enumerate the list of dns servers for a record from the root
$ dig +trace gmail.fr

# look up MX records for a given server
$ dig -tmx gmail.com

# kick other users off the machine who are ssh'ed in
$ ps aux | egrep "sshd: [a-zA-Z]+@"
# second column gives you the PID. Then do:
$ sudo kill [-9] PID

# display word differences between text files (the -3 means exclude common words from the output)
$ wdiff -3 text/file/1 text/file/2

# run a command in every subdirectory in a directory
# this particular one runs git diff to check if there are uncommited changes in a bunch of repos.
$ for d in */; do (echo "========$d=======" && cd "$d" && git diff); done | less

# send 'yes' or 'y' to stdout forever (can be modified to send other strings too)
$ yes
$ yes n  # sends n to stdout forever

# Create a bunch of files for testing purposes.
for i in {1..2}; do echo "" > page$i.htm; done

# Interact w/gmail smtp server from the command line using openssl
openssl s_client -connect smtp.gmail.com:465
HELO localhost
...

# munpack can be used to unpack a MIME-encoded message into its consitituent parts
munpack -t original_msg.eml 

# rename all files in a directory sequentially (blah.derp -> 1.jpg)
ls | cat -n | while read n f; do mv $f $n.jpg; done
